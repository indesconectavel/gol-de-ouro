// Teste de conex√£o com Supabase
const { createClient } = require('@supabase/supabase-js');

// Credenciais atuais (vamos testar)
const supabaseUrl = process.env.SUPABASE_URL || 'https://your-project.supabase.co';
const supabaseKey = process.env.SUPABASE_ANON_KEY || 'your-anon-key';
const supabaseServiceKey = process.env.SUPABASE_SERVICE_KEY || 'your-service-key';

console.log('üîç TESTANDO CONEX√ÉO COM SUPABASE');
console.log('URL:', supabaseUrl);
console.log('ANON_KEY:', supabaseKey ? `${supabaseKey.substring(0, 20)}...` : 'N√ÉO DEFINIDA');
console.log('SERVICE_KEY:', supabaseServiceKey ? `${supabaseServiceKey.substring(0, 20)}...` : 'N√ÉO DEFINIDA');

// Testar com chave an√¥nima
async function testAnonKey() {
  try {
    const supabase = createClient(supabaseUrl, supabaseKey);
    const { data, error } = await supabase.from('users').select('count').limit(1);
    
    if (error) {
      console.log('‚ùå Erro com ANON_KEY:', error.message);
      return false;
    } else {
      console.log('‚úÖ ANON_KEY funcionando');
      return true;
    }
  } catch (err) {
    console.log('‚ùå Erro na conex√£o ANON_KEY:', err.message);
    return false;
  }
}

// Testar com chave de servi√ßo
async function testServiceKey() {
  try {
    const supabase = createClient(supabaseUrl, supabaseServiceKey);
    const { data, error } = await supabase.from('users').select('count').limit(1);
    
    if (error) {
      console.log('‚ùå Erro com SERVICE_KEY:', error.message);
      return false;
    } else {
      console.log('‚úÖ SERVICE_KEY funcionando');
      return true;
    }
  } catch (err) {
    console.log('‚ùå Erro na conex√£o SERVICE_KEY:', err.message);
    return false;
  }
}

// Executar testes
async function runTests() {
  console.log('\nüß™ TESTANDO CONEX√ïES...\n');
  
  const anonResult = await testAnonKey();
  const serviceResult = await testServiceKey();
  
  console.log('\nüìä RESULTADOS:');
  console.log('ANON_KEY:', anonResult ? '‚úÖ OK' : '‚ùå FALHA');
  console.log('SERVICE_KEY:', serviceResult ? '‚úÖ OK' : '‚ùå FALHA');
  
  if (!anonResult && !serviceResult) {
    console.log('\nüö® PROBLEMA: Nenhuma chave est√° funcionando!');
    console.log('Verifique se as credenciais est√£o corretas no Fly.io');
  } else if (!serviceResult) {
    console.log('\n‚ö†Ô∏è AVISO: SERVICE_KEY n√£o funciona, mas ANON_KEY sim');
    console.log('Isso pode causar problemas nas opera√ß√µes administrativas');
  } else {
    console.log('\nüéâ SUCESSO: Todas as chaves est√£o funcionando!');
  }
}

runTests().catch(console.error);

name: Deploy Gol de Ouro

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Testes
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd goldeouro-backend && npm ci
          cd ../goldeouro-player && npm ci
          cd ../goldeouro-admin && npm ci

      - name: Run tests
        run: |
          cd goldeouro-player && npm test
          cd ../goldeouro-admin && npm test

      - name: Run linting
        run: |
          cd goldeouro-backend && npm run lint
          cd ../goldeouro-player && npm run lint
          cd ../goldeouro-admin && npm run lint

  # Build e Deploy
  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./goldeouro-backend
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-backend:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Player image
        uses: docker/build-push-action@v5
        with:
          context: ./goldeouro-player
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-player:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Build and push Admin image
        uses: docker/build-push-action@v5
        with:
          context: ./goldeouro-admin
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-admin:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}

  # Deploy to Production
  deploy:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Deploy to production
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          script: |
            cd /opt/goldeouro
            docker-compose pull
            docker-compose up -d
            docker system prune -f

  # Notify deployment
  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Notify deployment status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: always()

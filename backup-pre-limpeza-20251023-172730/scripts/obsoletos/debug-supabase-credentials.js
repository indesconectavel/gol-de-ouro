// Debug das credenciais do Supabase
console.log('üîç DEBUG DAS CREDENCIAIS SUPABASE');
console.log('================================');

// Verificar vari√°veis de ambiente
console.log('NODE_ENV:', process.env.NODE_ENV);
console.log('SUPABASE_URL:', process.env.SUPABASE_URL ? 'DEFINIDA' : 'N√ÉO DEFINIDA');
console.log('SUPABASE_ANON_KEY:', process.env.SUPABASE_ANON_KEY ? 'DEFINIDA' : 'N√ÉO DEFINIDA');
console.log('SUPABASE_SERVICE_KEY:', process.env.SUPABASE_SERVICE_KEY ? 'DEFINIDA' : 'N√ÉO DEFINIDA');

// Mostrar valores (parcialmente mascarados)
if (process.env.SUPABASE_URL) {
  console.log('URL:', process.env.SUPABASE_URL);
} else {
  console.log('‚ùå SUPABASE_URL n√£o definida');
}

if (process.env.SUPABASE_ANON_KEY) {
  const key = process.env.SUPABASE_ANON_KEY;
  console.log('ANON_KEY:', key.substring(0, 20) + '...' + key.substring(key.length - 10));
  console.log('ANON_KEY length:', key.length);
} else {
  console.log('‚ùå SUPABASE_ANON_KEY n√£o definida');
}

if (process.env.SUPABASE_SERVICE_KEY) {
  const key = process.env.SUPABASE_SERVICE_KEY;
  console.log('SERVICE_KEY:', key.substring(0, 20) + '...' + key.substring(key.length - 10));
  console.log('SERVICE_KEY length:', key.length);
} else {
  console.log('‚ùå SUPABASE_SERVICE_KEY n√£o definida');
}

// Testar conex√£o se as credenciais existem
if (process.env.SUPABASE_URL && process.env.SUPABASE_SERVICE_KEY) {
  console.log('\nüß™ TESTANDO CONEX√ÉO...');
  
  try {
    const { createClient } = require('@supabase/supabase-js');
    const supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_KEY);
    
    // Testar conex√£o simples
    supabase.from('users').select('count').limit(1)
      .then(({ data, error }) => {
        if (error) {
          console.log('‚ùå Erro na conex√£o:', error.message);
          console.log('C√≥digo do erro:', error.code);
          console.log('Detalhes:', error.details);
        } else {
          console.log('‚úÖ Conex√£o com Supabase funcionando!');
          console.log('Dados retornados:', data);
        }
      })
      .catch(err => {
        console.log('‚ùå Erro na conex√£o:', err.message);
        console.log('Stack:', err.stack);
      });
  } catch (err) {
    console.log('‚ùå Erro ao criar cliente Supabase:', err.message);
  }
} else {
  console.log('\n‚ö†Ô∏è Credenciais incompletas - n√£o √© poss√≠vel testar conex√£o');
  console.log('Verifique se todas as vari√°veis est√£o definidas no Fly.io');
}

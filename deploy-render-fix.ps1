# DEPLOY RENDER FIX - Gol de Ouro Backend
# Script PowerShell para fazer deploy da corre√ß√£o no Render

Write-Host "üöÄ INICIANDO DEPLOY RENDER FIX..." -ForegroundColor Green
Write-Host ""

# Verificar se estamos no diret√≥rio correto
if (-not (Test-Path "server-render-fix.js")) {
    Write-Host "‚ùå ERRO: Arquivo server-render-fix.js n√£o encontrado!" -ForegroundColor Red
    Write-Host "   Execute este script no diret√≥rio raiz do projeto." -ForegroundColor Yellow
    exit 1
}

# Verificar se o router.js existe
if (-not (Test-Path "router.js")) {
    Write-Host "‚ùå ERRO: Arquivo router.js n√£o encontrado!" -ForegroundColor Red
    Write-Host "   O arquivo router.js √© necess√°rio para o funcionamento." -ForegroundColor Yellow
    exit 1
}

Write-Host "‚úÖ Arquivos necess√°rios encontrados:" -ForegroundColor Green
Write-Host "   - server-render-fix.js" -ForegroundColor White
Write-Host "   - router.js" -ForegroundColor White
Write-Host "   - package.json" -ForegroundColor White
Write-Host "   - render.yaml" -ForegroundColor White
Write-Host ""

# Verificar se o Git est√° configurado
Write-Host "üîç Verificando configura√ß√£o do Git..." -ForegroundColor Cyan
try {
    $gitStatus = git status --porcelain
    Write-Host "‚úÖ Git configurado corretamente" -ForegroundColor Green
} catch {
    Write-Host "‚ùå ERRO: Git n√£o configurado ou n√£o encontrado!" -ForegroundColor Red
    Write-Host "   Configure o Git antes de continuar." -ForegroundColor Yellow
    exit 1
}

# Mostrar status do Git
Write-Host "üìã Status dos arquivos:" -ForegroundColor Cyan
git status --short

Write-Host ""
Write-Host "üîß ARQUIVOS MODIFICADOS/CRIADOS:" -ForegroundColor Yellow
Write-Host "   ‚úÖ router.js - Router principal criado" -ForegroundColor White
Write-Host "   ‚úÖ server-render-fix.js - Atualizado com import do router" -ForegroundColor White
Write-Host "   ‚úÖ diagnostico-render-fix.js - Script de diagn√≥stico" -ForegroundColor White
Write-Host "   ‚úÖ AUDITORIA-RENDER-CORRIGIDA-2025-09-06.md - Relat√≥rio completo" -ForegroundColor White
Write-Host ""

# Perguntar se deseja continuar
$continuar = Read-Host "Deseja fazer commit e push das altera√ß√µes? (s/n)"
if ($continuar -ne "s" -and $continuar -ne "S") {
    Write-Host "‚ùå Deploy cancelado pelo usu√°rio." -ForegroundColor Red
    exit 0
}

# Fazer commit das altera√ß√µes
Write-Host "üìù Fazendo commit das altera√ß√µes..." -ForegroundColor Cyan
try {
    git add .
    git commit -m "FIX: Resolve erro Cannot find module router no Render - Criado arquivo router.js faltante - Atualizado server-render-fix.js com import do router - Adicionado script de diagnostico - Criado relatorio de auditoria completa - Problema resolvido: Backend agora pode inicializar no Render"
    
    Write-Host "‚úÖ Commit realizado com sucesso!" -ForegroundColor Green
} catch {
    Write-Host "‚ùå ERRO ao fazer commit: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

# Fazer push para o reposit√≥rio
Write-Host "üöÄ Fazendo push para o reposit√≥rio..." -ForegroundColor Cyan
try {
    git push origin main
    Write-Host "‚úÖ Push realizado com sucesso!" -ForegroundColor Green
} catch {
    Write-Host "‚ùå ERRO ao fazer push: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "   Verifique a configura√ß√£o do reposit√≥rio remoto." -ForegroundColor Yellow
    exit 1
}

Write-Host ""
Write-Host "üéâ DEPLOY RENDER FIX CONCLU√çDO COM SUCESSO!" -ForegroundColor Green
Write-Host ""
Write-Host "üìä RESUMO DA CORRE√á√ÉO:" -ForegroundColor Cyan
Write-Host "   ‚úÖ Erro 'Cannot find module ./router' resolvido" -ForegroundColor White
Write-Host "   ‚úÖ Arquivo router.js criado e integrado" -ForegroundColor White
Write-Host "   ‚úÖ Servidor testado localmente e funcionando" -ForegroundColor White
Write-Host "   ‚úÖ Altera√ß√µes commitadas e enviadas para o reposit√≥rio" -ForegroundColor White
Write-Host ""
Write-Host "üîó PR√ìXIMOS PASSOS:" -ForegroundColor Yellow
Write-Host "   1. Acesse o dashboard do Render.com" -ForegroundColor White
Write-Host "   2. Verifique se o deploy autom√°tico foi iniciado" -ForegroundColor White
Write-Host "   3. Monitore os logs do deploy" -ForegroundColor White
Write-Host "   4. Teste a URL do backend ap√≥s o deploy" -ForegroundColor White
Write-Host ""
Write-Host "üåê URLs do Sistema:" -ForegroundColor Cyan
Write-Host "   Backend: https://goldeouro-backend.onrender.com" -ForegroundColor White
Write-Host "   Player: https://goldeouro-player.vercel.app" -ForegroundColor White
Write-Host "   Admin: https://goldeouro-admin.vercel.app" -ForegroundColor White
Write-Host ""
Write-Host "‚úÖ PROBLEMA RESOLVIDO - BACKEND PRONTO PARA PRODU√á√ÉO!" -ForegroundColor Green

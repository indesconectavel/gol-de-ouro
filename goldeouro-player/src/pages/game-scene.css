/* ===== escopo /game ===== */
body[data-page="game"] { margin:0; overflow:hidden; background:transparent; }
.game-page { position:fixed; inset:0; display:flex; background:transparent; }

/* bloquear retrato só aqui */
.game-rotate{ display:none; }
@media (orientation: portrait){
  .game-rotate{ position:fixed; inset:0; display:grid; place-items:center; z-index:9999; background:#0b1e2a; color:#fff; padding:24px; text-align:center; }
  .rotate-card{ border-radius:16px; padding:20px 24px; background:rgba(255,255,255,.06); backdrop-filter:blur(6px); }
  .game-stage-wrap{ display:none; }
}

/* ===== stage ocupa toda a viewport; sem 'fundo azul' visível ===== */
:root{ --vh:1vh; }
.game-stage-wrap{ position:relative; flex:1; width:100vw; height:calc(var(--vh)*100); }
.game-stage{ position:absolute; inset:0; }
#stage-root{ position:absolute; inset:0; width:100vw; height:100vh; overflow:hidden; }

/* ===== geometria do playfield 16:9 =====
   - calculamos a área 16:9 (pf-w/pf-h) e as "margens pretas" (pf-ox/pf-oy)
   - assim ancoramos HUD por porcentagens da área jogável real
*/
#stage-root{
  --pf-w: min(100vw, calc((var(--vh)*100) * 16 / 9));
  --pf-h: min(calc(var(--vh)*100), calc(100vw * 9 / 16));
  --pf-ox: calc((100vw - var(--pf-w)) / 2); /* offset X do playfield dentro do stage */
  --pf-oy: calc((100vh - var(--pf-h)) / 2); /* offset Y do playfield dentro do stage */
}

/* se usar bg/canvas, cobrir sempre */
#stage-root .scene-bg, #stage-root > canvas{ position:absolute; inset:0; width:100%; height:100%; object-fit:cover; }

/* ===== header da cena (card do topo, com logo+metricas+apostas) ===== */
.hud-header{
  position:absolute; z-index:4;
  left: calc(var(--pf-ox) + var(--pf-w) * 0.04);
  right: calc(var(--pf-ox) + var(--pf-w) * 0.04);
  top:  calc(var(--pf-oy) + var(--pf-h) * 0.035);   /* ~3.5% da altura do playfield */
  pointer-events:auto;
}
/* logo 200px e esconder textos apenas aqui */
.hud-header img.brand-logo{ width:200px; height:auto; }
.hud-header .brand-title, .hud-header .brand-sub{ display:none !important; }

/* ===== ações sobre o campo (mesma altura; fora do card) =====
   alinhamos "partida" (ESQ) e "dashboard" (DIR) exatamente pela área 16:9
*/
.hud-actions{
  position:absolute; z-index:6; display:flex; align-items:center;
  left:  calc(var(--pf-ox) + var(--pf-w) * 0.04);
  right: calc(var(--pf-ox) + var(--pf-w) * 0.04);
  top:   calc(var(--pf-oy) + var(--pf-h) * 0.135);  /* ~13.5% do playfield — ajuste fino */
}
.hud-left{ display:flex; align-items:center; gap:12px; }
.hud-right{ margin-left:auto; display:flex; align-items:center; gap:12px; }
/* só layout; visual vem do estilo original dos botões */
.btn-partida, .btn-dashboard{ border:0; border-radius:999px; line-height:1; padding:10px 16px; font-weight:600; cursor:pointer; }
.btn-partida{ background:#23c381; color:#fff; }
.btn-dashboard{ background:#132840; color:#fff; }

/* ===== rodapé do campo ===== */
.hud-footer{ position:absolute; z-index:5; left:0; right:0; pointer-events:none; }
.hud-bottom-left, .hud-bottom-right{ position:absolute; bottom:0; pointer-events:auto; }
/* âncoras por porcentagem da área 16:9 */
.hud-bottom-left{
  left:  calc(var(--pf-ox) + var(--pf-w) * 0.04);
  bottom:calc(var(--pf-oy) + var(--pf-h) * 0.055);  /* ~5.5% da altura do playfield */
}
.hud-bottom-right{
  right: calc(var(--pf-ox) + var(--pf-w) * 0.04);
  bottom:calc(var(--pf-oy) + var(--pf-h) * 0.055);
}
/* manter estilos visuais originais */
.btn-queue{ display:inline-flex; }
.hud-cluster{ display:inline-flex; gap:12px; }

/* remover qualquer topbar/faixa externa que restou */
body[data-page="game"] .game-topbar,
body[data-page="game"] header.game-topbar,
body[data-page="game"] .hud-header-clip,
body[data-page="game"] .glass-strip { display:none !important; }